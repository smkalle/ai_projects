version: '3.8'

services:
  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: medipulse-backend
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DATABASE_URL=postgresql://medipulse:medipulse@postgres:5432/medipulse
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGINS=http://localhost:3000,https://medipulse.vercel.app
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - redis
    networks:
      - medipulse-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: medipulse-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - medipulse-network
    command: npm run dev

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: medipulse-postgres
    environment:
      - POSTGRES_USER=medipulse
      - POSTGRES_PASSWORD=medipulse
      - POSTGRES_DB=medipulse
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - medipulse-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: medipulse-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - medipulse-network

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: medipulse-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - medipulse-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  medipulse-network:
    driver: bridge